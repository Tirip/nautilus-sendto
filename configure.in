AC_PREREQ(2.52)

AC_INIT(nautilus-sendto, 1.1.0, http://www.gnome.org)
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE([1.9 dist-bzip2 no-dist-gzip check-news])

AM_MAINTAINER_MODE

AM_DISABLE_STATIC
AC_PROG_CC
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_MAKE_SET

GNOME_COMMON_INIT
GNOME_DEBUG_CHECK
GNOME_COMPILE_WARNINGS([maximum])
GNOME_CXX_WARNINGS
GNOME_MAINTAINER_MODE_DEFINES

ERROR_CFLAGS="-Wall -Wextra -Werror -Wno_missing_field_initializers -Wno_unused_parameter"

dnl --------------------------------------------------

GLIB_REQUIRED=2.6.0
GTK_REQUIRED=2.4.0
GLADE_REQUIRED=2.5.1
EBOOK_REQUIRED=1.5.3
GCONF_REQUIRED=2.13.0
GAIM_REQUIRED=1.5.0
PIDGIN_REQUIRED=2.0.0
NAUTILUS_EXTENSION=2.13.3
DBUS_REQUIRED=1.0
DBUS_GLIB_REQUIRED=0.60
GUPNP_AV_REQUIRED=0.2.1
EMPATHY_REQUIRED=2.23.91
EMPATHY_GTK_REQUIRED=2.25.2

AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(GLADE_REQUIRED)
AC_SUBST(GCONF_REQUIRED)
AC_SUBST(EBOOK_REQUIRED)
AC_SUBST(GAIM_REQUIRED)
AC_SUBST(PIDGIN_REQUIRED)
AC_SUBST(NAUTILUS_EXTENSION)
AC_SUBST(BLUETOOTH_REQUIRED)
AC_SUBST(DBUS_REQUIRED)
AC_SUBST(GUPNP_AV_REQUIRED)
AC_SUBST(EMPATHY_REQUIRED)
AC_SUBST(EMPATHY_GTK_REQUIRED)

PKG_CHECK_MODULES(NAUTILUS_SENDTO,\
	 glib-2.0 >= $GLIB_REQUIRED                \
	 gmodule-2.0 >= $GLIB_REQUIRED		  \
	 gtk+-2.0    >= $GTK_REQUIRED             \
	 libglade-2.0 >= $GLADE_REQUIRED            \
	 gconf-2.0 >= $GCONF_REQUIRED)
AC_SUBST(NAUTILUS_SENDTO_CFLAGS)
AC_SUBST(NAUTILUS_SENDTO_LIBS)

PKG_CHECK_MODULES(NAUTILUS_EXT_SENDTO,\
	 libnautilus-extension >= $NAUTILUS_EXTENSION)
AC_SUBST(NAUTILUS_EXT_SENDTO_CFLAGS)
AC_SUBST(NAUTILUS_EXT_SENDTO_LIBS)

dnl Get nautilus extensions directory
dnl ---------------------------------
NAUTILUS_EXTENSION_DIR=`$PKG_CONFIG --variable=extensiondir libnautilus-extension`
AC_SUBST(NAUTILUS_EXTENSION_DIR)

dnl Libebook support
dnl ---------------------------------

PKG_CHECK_MODULES(NST_EBOOK, libebook-1.2 >= $EBOOK_REQUIRED,
	[
	AC_SUBST(NST_EBOOK_CFLAGS)
	AC_SUBST(NST_EBOOK_LIBS)
	echo "Using libebook-1.2 !"
	enable_evolution=yes
	],
	[
        echo "Building without evolution"
	enable_evolution=no
	]
)

AM_CONDITIONAL(HAVE_EVOLUTION, test "x$enable_evolution" = "xyes")

saved_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $NST_EBOOK_CFLAGS"
AC_CHECK_TYPES([EContactPhotoType], , , [#include <libebook/e-contact.h>])
CPPFLAGS="$saved_CPPFLAGS"

dnl Gaim support if it's installed
dnl ---------------------------------


PKG_CHECK_MODULES(GAIM, gaim >= $GAIM_REQUIRED,
	[
	AC_SUBST(GAIM_CFLAGS)
	AC_SUBST(GAIM_LIBS)
	GAIM_LIBDIR=`pkg-config --variable=libdir gaim`
	GAIM_DATADIR=`pkg-config --variable=datadir gaim`
	AC_SUBST(GAIM_LIBDIR)
	AC_SUBST(GAIM_DATADIR)
	enable_gaim=yes
	],
	[
	echo "Building without gaim"
	enable_gaim=no
	]
)

AM_CONDITIONAL(HAVE_GAIM, test "x$enable_gaim" = "xyes")

dnl Pidgin support if it's installed
dnl ---------------------------------


PKG_CHECK_MODULES(PIDGIN, pidgin >= $PIDGIN_REQUIRED purple >= $PIDGIN_REQUIRED,
	[
	AC_SUBST(PIDGIN_CFLAGS)
	AC_SUBST(PIDGIN_LIBS)
	PIDGIN_LIBDIR=`pkg-config --variable=libdir purple`
	PIDGIN_DATADIR=`pkg-config --variable=datadir purple`
	AC_SUBST(PIDGIN_LIBDIR)
	AC_SUBST(PIDGIN_DATADIR)
	enable_pidgin=yes
	],
	[
	echo "Building without pidgin"
	enable_pidgin=no
	]
)

AM_CONDITIONAL(HAVE_PIDGIN, test "x$enable_pidgin" = "xyes")

dnl Bluetooth support if it's installed
dnl -----------------------------------

PKG_CHECK_MODULES(BLUETOOTH, dbus-glib-1 >= $DBUS_GLIB_REQUIRED,
	[
	AC_SUBST(BLUETOOTH_CFLAGS)
	AC_SUBST(BLUETOOTH_LIBS)
	enable_bluetooth=yes
	],
	[
	echo "Building without Bluetooth"
	enable_bluetooth=no
	]
)

AM_CONDITIONAL(HAVE_BLUETOOTH, test "x$enable_bluetooth" = "xyes")

PKG_CHECK_MODULES(UPNP, gupnp-av-1.0 >= $GUPNP_AV_REQUIRED,
	[
	AC_SUBST(UPNP_CFLAGS)
	AC_SUBST(UPNP_LIBS)
	enable_upnp=yes
	],
	[
	echo "Building without UPnP"
	enable_upnp=no
	]
)

dnl GUPnP AV if it's installed
dnl -----------------------------------

AM_CONDITIONAL(HAVE_UPNP, test "x$enable_upnp" = "xyes")

GLIB_GENMARSHAL=`$PKG_CONFIG --variable=glib_genmarshal glib-2.0`
AC_SUBST(GLIB_GENMARSHAL)

dnl --------------------------------------------------

dnl Balsa support
dnl -------------------------------------------------

enable_balsa=no
AM_CONDITIONAL(HAVE_BALSA, test "x$enable_balsa" = "xyes")
dnl -------------------------------------------------


dnl Sylpheed support
dnl -------------------------------------------------

enable_sylpheed=yes
AM_CONDITIONAL(HAVE_SYLPHEED, test "x$enable_sylpheed" = "xyes")
dnl -------------------------------------------------


dnl Thunderbird support
dnl -------------------------------------------------

AC_ARG_WITH([thunderbird-name],
	    [AS_HELP_STRING([--with-thunderbird-name],[Binary name for Thunderbird (default: thunderbird)])],
	    [with_thunderbird_name=$withval])
if test "x$with_thunderbird_name" = "x" ; then
	with_thunderbird_name=thunderbird
fi

THUNDERBIRD_NAME=$with_thunderbird_name
AC_SUBST(THUNDERBIRD_NAME)

AC_DEFINE_UNQUOTED(THUNDERBIRD_NAME, "$THUNDERBIRD_NAME", [name of the Thunderbird binary])

enable_thunderbird=yes
AM_CONDITIONAL(HAVE_THUNDERBIRD, test "x$enable_thunderbird" = "xyes")

dnl -------------------------------------------------

dnl Gajim support
dnl -------------------------------------------------

AC_ARG_WITH(gajim,
        [AS_HELP_STRING(--with-gajim,[Path to Gajim install prefix])],
        [GAJIM_PATH="$withval"],[GAJIM_PATH="$prefix"])

GAJIM_SHARE_DIR="$GAJIM_PATH"/share/gajim

PKG_CHECK_MODULES(DBUS, dbus-1 >= $DBUS_REQUIRED dbus-glib-1 >= $DBUS_GLIB_REQUIRED,
        [
        AC_SUBST(DBUS_CFLAGS)
        AC_SUBST(DBUS_LIBS)
	if test -f "$GAJIM_SHARE_DIR"/data/pixmaps/gajim.png ;
	then
		enable_gajim=yes
		AC_DEFINE_UNQUOTED(GAJIM_SHARE_DIR, "$GAJIM_SHARE_DIR", [path to gajim share dir])
	else
		echo "Building without Gajim support"
		enable_gajim=no
	fi
        ],
        [
        echo "Building without Gajim support"
        enable_gajim=no
        ]
)

AM_CONDITIONAL(HAVE_GAJIM, test "x$enable_gajim" = "xyes")

dnl -------------------------------------------------

dnl Empathy support
dnl -------------------------------------------------

PKG_CHECK_MODULES(EMPATHY, libempathy >= $EMPATHY_REQUIRED libempathy-gtk >= $EMPATHY_GTK_REQUIRED gio-2.0 telepathy-glib,
       [
       AC_SUBST(EMPATHY_CFLAGS)
       AC_SUBST(EMPATHY_LIBS)
       enable_empathy=yes
       ],
       [
       echo "Building without empathy"
       enable_empathy=no
       ]
)

AM_CONDITIONAL(HAVE_EMPATHY, test "x$enable_empathy" = "xyes")

dnl -------------------------------------------------

IT_PROG_INTLTOOL([0.35.0])

GETTEXT_PACKAGE=nautilus-sendto
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [GetText Package])
                                                                               
AM_GLIB_GNU_GETTEXT

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

AC_OUTPUT([
Makefile
src/Makefile
src/plugins/Makefile
gaim_plugin/Makefile
pidgin_plugin/Makefile
po/Makefile.in
])

echo "-------------------------------------------------------"
echo "                                                       "

if test "x${enable_evolution}" = "xyes" ; then
   echo " **  Enable evolution plugin : YES"
else
   echo "     Enable evolution plugin : NO"
fi

if test "x${enable_gaim}" = "xyes" ; then
   echo " **  Enable gaim plugin : YES"
else
   echo "     Enable gaim plugin : NO"
fi

if test "x${enable_pidgin}" = "xyes" ; then
   echo " **  Enable pidgin plugin : YES"
else
   echo "     Enable pidgin plugin : NO"
fi

if test "x${enable_bluetooth}" = "xyes" ; then
   echo " **  Enable bluetooth plugin : YES"
else
   echo "     Enable bluetooth plugin : NO"
fi

if test "x${enable_upnp}" = "xyes" ; then
   echo " **  Enable UPnP plugin : YES"
else
   echo "     Enable UPnP plugin : NO"
fi

if test "x${enable_balsa}" = "xyes" ; then
   echo " **  Enable balsa plugin : YES"
else
   echo "     Enable balsa plugin (under development, don't support attachments) : NO"
fi

if test "x${enable_sylpheed}" = "xyes" ; then
   echo " **  Enable sylpheed plugin : YES"
else
   echo "     Enable sylpheed plugin : NO"
fi

if test "x${enable_thunderbird}" = "xyes" ; then
   echo " **  Enable thunderbird plugin : YES (binary name: $THUNDERBIRD_NAME)"
else
   echo "     Enable thunderbird plugin : NO"
fi

if test "x${enable_gajim}" = "xyes" ; then
   echo " **  Enable gajim plugin : YES"
else
   echo "     Enable gajim plugin : NO"
fi

if test "x${enable_empathy}" = "xyes" ; then
   echo " **  Enable empathy plugin : YES"
else
   echo "     Enable empathy plugin : NO"
fi

echo "                                                       "
echo "-------------------------------------------------------"
